{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"intro/","title":"Introducci\u00f3n","text":"<p> En este espacio se presentan algunos apuntes del m\u00f3dulo de Sistemas en Big Data en el Curso de espacializaci\u00f3n de Inteligencia Artificial y Big Data que se imparte en el I.E.S. Lluis Simarro de X\u00e0tiva. </p> <ul> <li>Elaboraci\u00f3n: Alberto Aparicio Vila </li> <li>Colaboraci\u00f3n: Jorge Soro Domenech  </li> </ul> <p>Dpto. Inform\u00e1tica I.E.S. Dr. Lluis Simarro Lacabra X\u00e0tiva</p> <p>Fuentes utilizadas</p> <p>Las principales fuentes consultadas para la realizaci\u00f3n de esta secci\u00f3n han sido:</p> <ul> <li>Aitor Medrano. Cursos Inteligencia Artificial y Big Data. Almacen de datos NoSQL</li> <li>Next Generation Databases: NoSQL, NewSQL, and Big Data</li> <li>NoSQL Distilled: A Brief Guide to the Emerging World of Polyglot Persistence</li> <li>Row vs Column Oriented Databases</li> <li>Understanding Database Sharding</li> </ul> <p>Made with Material for MkDocs</p>"},{"location":"NoSQL/nosql/","title":"Almacenamiento de datos. NoSQL","text":""},{"location":"NoSQL/nosql/#almacenamiento-de-datos","title":"Almacenamiento de datos","text":"<p>Se puede decir que estamos en la tercera plataforma tercera plataforma del almacenamiento de datos. La primera lleg\u00f3 con los primeros computadores y se materializ\u00f3 en las bases de datos jer\u00e1rquicas y en red, as\u00ed como en el almacenamiento ISAM. La segunda vino de la mano de Internet y las arquitecturas cliente-servidor, lo que dio lugar a las bases de datos relacionales.</p> <p>La tercera se ve motivada por el Big Data, los dispositivos m\u00f3viles, las arquitecturas cloud, las redes de IoT y las tecnolog\u00edas/redes sociales. Es tal el volumen de datos que se genera que aparecen nuevos paradigmas como NoSQL, NewSQL y las plataformas de Big Data. En esta sesi\u00f3n nos vamos a centrar en NoSQL.</p> <p>NoSQL aparece como una necesidad debida al creciente volumen de datos sobre usuarios, objetos y productos que las empresas tienen que almacenar, as\u00ed como la frecuencia con la que se accede a los datos. Los SGDB relacionales existentes no fueron dise\u00f1ados teniendo en cuenta la escalabilidad ni la flexibilidad necesaria por las frecuentes modificaciones que necesitan las aplicaciones modernas; tampoco aprovechan que el almacenamiento a d\u00eda de hoy es muy barato, ni el nivel de procesamiento que alcanzan las m\u00e1quinas actuales.</p> <p> </p>"},{"location":"NoSQL/nosql/#no-solo-sql","title":"No Solo SQL","text":"<p>Definici\u00f3n formal: tecnolog\u00edas que priorizan rendimiento, fiabilidad y agilidad frente a modelos relacionales :contentReference[oaicite:3]{index=3}.</p> <p>Interpretaci\u00f3n de NoSQL:</p> <ul> <li>No = Not only: complementarios a SQL.</li> <li>Priorizan escalabilidad y disponibilidad en lugar de atomicidad y consistencia estricta (ACID):</li> <li>Atomizaci\u00f3n</li> <li>Consistencia</li> <li>Isolaci\u00f3n</li> <li>Durabilidad :contentReference[oaicite:4]{index=4}</li> </ul>"},{"location":"NoSQL/nosql/#modelos-de-datos-nosql","title":"Modelos de datos NoSQL","text":"<ol> <li>Clave\u2011Valor: pares simples; ejemplos: Redis, Riak, DynamoDB :contentReference[oaicite:5]{index=5}  </li> <li>Documental: documentos JSON; ejemplos: MongoDB, CouchDB :contentReference[oaicite:6]{index=6}  </li> <li>Grafos: para redes; ejemplos: Neo4J, Neptune, ArangoDB :contentReference[oaicite:7]{index=7}  </li> <li>Columnas: optimizadas para grandes vol\u00famenes; ejemplos: BigTable, Cassandra, HBase :contentReference[oaicite:8]{index=8}</li> </ol>"},{"location":"NoSQL/nosql/#caracteristicas-principales","title":"Caracter\u00edsticas principales","text":"<ul> <li>Manejo de vol\u00famenes masivos y datos semi/estructurados  </li> <li>Esquemas din\u00e1micos: a\u00f1adir campos sin migraciones  </li> <li>Escalabilidad horizontal mediante clusters  </li> <li>Cach\u00e9 integrada \u2192 permite consistencia eventual :contentReference[oaicite:9]{index=9}</li> </ul>"},{"location":"NoSQL/nosql/#esquemas-dinamicos","title":"Esquemas din\u00e1micos","text":"<p>No requieren definici\u00f3n previa del esquema \u2192 \u00e1gil integraci\u00f3n y sin downtime. Posibilidad de definir esquema solo al leer (schema-on-read) :contentReference[oaicite:10]{index=10}</p>"},{"location":"NoSQL/nosql/#particionado-sharding","title":"Particionado (Sharding)","text":"<ul> <li>Crucial para escalar horizontalmente  </li> <li>Tipos: horizontal (filas) vs vertical (columnas)  </li> <li>En NoSQL, se usa especialmente en clave\u2011valor y documental; columnas pueden usar ambos :contentReference[oaicite:11]{index=11}</li> </ul>"},{"location":"NoSQL/nosql/#autosharding","title":"Auto\u2011sharding","text":"<p>Distribuci\u00f3n autom\u00e1tica transparente para la aplicaci\u00f3n (por rango, lista, hash) :contentReference[oaicite:12]{index=12}</p>"},{"location":"NoSQL/nosql/#replicacion","title":"Replicaci\u00f3n","text":"<p>Copia de datos en varios nodos para alta disponibilidad y tolerancia a fallos. - Peer-to-peer: todos escriben, posible inconsistencia temporal :contentReference[oaicite:13]{index=13} - Replicaci\u00f3n + particionado = entorno ideal :contentReference[oaicite:14]{index=14}</p>"},{"location":"NoSQL/nosql/#implantacion","title":"Implantaci\u00f3n","text":"<p>Proceso t\u00edpico:</p> <ol> <li>Prueba piloto con baja escala (gratuita, open-source)  </li> <li>Escalado tras an\u00e1lisis del crecimiento, modelo de datos, consistencia, APIs, soporte y comunidad :contentReference[oaicite:15]{index=15}</li> </ol>"},{"location":"NoSQL/nosql/#decision-tecnologica","title":"Decisi\u00f3n tecnol\u00f3gica","text":"<p>Evaluar seg\u00fan:</p> <ul> <li>Modelo de datos (documental, columnar, grafos, clave\u2011valor)  </li> <li>Necesidades de consulta y de \u00edndices secundarios  </li> <li>Consistencia vs disponibilidad  </li> <li>APIs y ecosistema  </li> <li>Comunidad y soporte :contentReference[oaicite:16]{index=16}</li> </ul>"},{"location":"NoSQL/nosql/#casos-de-uso","title":"Casos de uso","text":"<ul> <li>Aplicaciones web con campos personalizables \u2192 Documental </li> <li>Cach\u00e9 \u2192 Clave\u2011Valor </li> <li>Almacenamiento de metadatos binarios \u2192 Documental o Clave\u2011Valor  </li> <li>Grandes vol\u00famenes, baja consistencia \u2192 Documental o Columnar :contentReference[oaicite:17]{index=17}</li> </ul>"},{"location":"NoSQL/nosql/#limitaciones","title":"Limitaciones","text":"<ul> <li>Ausencia de est\u00e1ndar \u00fanico  </li> <li>Riesgo en proyectos open\u2011source sin soporte comercial  </li> <li>Interfaces gr\u00e1ficas limitadas  </li> <li>Profesionales con experiencia escasa :contentReference[oaicite:18]{index=18}</li> </ul>"},{"location":"NoSQL/nosql/#teorema-de-cap","title":"Teorema de CAP","text":"<p>De Brewer (2000): en sistemas distribuidos solo se pueden cumplir dos de tres: - Consistencia - Availability - Partition tolerance :contentReference[oaicite:19]{index=19}</p> <p>Se elige entre CP, AP o CA, pero no los tres.</p>"},{"location":"NoSQL/nosql/#modelo-base","title":"Modelo BASE","text":"<ul> <li>Basically Available, Soft\u2011state y Eventual consistency  </li> <li>Prioriza disponibilidad y tolerancia a particiones (AP) :contentReference[oaicite:20]{index=20}</li> </ul>"},{"location":"NoSQL/nosql/#actividades-propuestas","title":"\ud83d\udcdd Actividades propuestas","text":"<ol> <li>\u00bfQu\u00e9 significa el prefijo \u201cNo\u201d en NoSQL?  </li> <li>\u00bfPuede un sistema soportar replicaci\u00f3n y particionado simult\u00e1neamente?  </li> <li>Asignar modelo de datos a escenarios:  </li> <li>Wiki de c\u00f3mics  </li> <li>Informaci\u00f3n acad\u00e9mica de un pa\u00eds  </li> <li>Investigar persistencia pol\u00edglota </li> <li>Clasificar: BigTable, Cassandra, CouchDB, DynamoDB, HBase, MongoDB, Redis, Riak, Voldemort seg\u00fan CAP  </li> <li>Crear presentaci\u00f3n sobre NewSQL, su relaci\u00f3n con NoSQL y ejemplos como CockroachDB o VoltDB</li> </ol> <p>Fuentes utilizadas</p> <p>Las principales fuentes consultadas para la realizaci\u00f3n de esta secci\u00f3n han sido:</p> <ul> <li>Aitor Medrano. Cursos Inteligencia Artificial y Big Data. Almacen de datos NoSQL</li> <li>Next Generation Databases: NoSQL, NewSQL, and Big Data</li> <li>NoSQL Distilled: A Brief Guide to the Emerging World of Polyglot Persistence</li> <li>Row vs Column Oriented Databases</li> <li>Understanding Database Sharding</li> </ul>"}]}